<launch>
  
  <arg name="model" default="burger" doc="model type [burger, waffle, waffle_pi]"/>
  <env name="TURTLEBOT3_MODEL" value="$(arg model)" />
  <arg name="first_name"  default="master"/>
  <arg name="second_name" default="slave"/>

  <arg name="map_file" default="$(find maze_solver)/maps/full.yaml"/>
  <arg name="move_forward_only" default="false"/>

  <arg name="master_x_pos" default="-2.0"/>
  <arg name="master_y_pos" default="-2.0"/>
  <arg name="master_z_pos" default="0.0"/>
  <arg name="master_yaw"   default="0.0"/>

  <arg name="slave_x_pos" default="-2.3"/>
  <arg name="slave_y_pos" default="-2.0"/>
  <arg name="slave_z_pos" default="0.0"/>
  <arg name="slave_yaw"   default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find maze_solver)/worlds/maze2.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <include file="$(find turtlebot3_navigation)/launch/amcl.launch" >
    <arg name="initial_pose_x"            value="$(arg master_x_pos)"/>
    <arg name="initial_pose_y"            value="$(arg master_y_pos)"/>
    <arg name="initial_pose_a"            value="$(arg master_yaw)"/>
  </include>

  <include file="$(find maze_solver)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>

  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <node pkg="rviz" type="rviz" name="rviz" required="true"
        args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher2" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_burger -x $(arg master_x_pos) -y $(arg master_y_pos) -z $(arg master_z_pos) -Y $(arg master_yaw) -param robot_description" />
  <node pkg="maze_solver" name="master_rescue" type="rescuer.py" output="screen" />

  <group ns = "$(arg second_name)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
    <rosparam file="$(find maze_solver)/config/LDS-01.yaml" param="laser_params"/>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg second_name)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg model) -x $(arg slave_x_pos) -y $(arg slave_y_pos) -z $(arg slave_z_pos) -Y $(arg slave_yaw) -param robot_description" />
    <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
      <remap from="scan" to="/$(arg second_name)/scan" />
      <rosparam command="load" file="$(find turtlebot3_follow_filter)/filter/turtlebot3_follow_filter.yaml" />
      <remap from="scan_filtered" to="/scan_filtered" />
    </node>
    <node pkg="maze_solver" type="follower" name="follower" output="screen" args="$(arg second_name)" />
  </group>

</launch>
